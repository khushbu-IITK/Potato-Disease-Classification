# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1csBhJii5ZwPcg8676GLrEjDbkU90mVWt
"""
# pip install --upgrade pip
# pip install streamlit

import streamlit as st
from PIL import Image
import tensorflow as tf
import numpy as np
import os

class_name = ['Potato___Early_blight', 'Potato___Late_blight', 'Potato___healthy']
# Load the model
model = tf.keras.models.load_model('Potato_classification_model (1).h5')

st.title("Potato Leaf Disease Classifier")

uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

# Function to preprocess the image
def preprocess_image(image):
    img = image.resize((256, 256))  # Resize to the model's expected input size
    img_array = tf.keras.preprocessing.image.img_to_array(img)
    return img_array
    
# Defining predict function
def predict(model, img):
    BATCH_SIZE =32
    Batch = np.zeros((BATCH_SIZE, img.shape[0],img.shape[1],img.shape[2]))
    Batch[0] = img
    predictions = model.predict(Batch)

    predicted_class = class_name[np.argmax(predictions[0])]
    confidence = round(100 * (np.max(predictions[0])), 2)
    return predicted_class, confidence

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image.', use_column_width=True)
    st.write("Classifying...")
    
    # Preprocess the image and make predictions
    img_array = preprocess_image(image)
    # Predicting the preprocessed data
    prediction, confidence = predict(model, img_array)
    st.write(f"\nPredicted class: {prediction}.\n")  
    st.write(f"Confidence: {confidence: .2f}%\n")  

